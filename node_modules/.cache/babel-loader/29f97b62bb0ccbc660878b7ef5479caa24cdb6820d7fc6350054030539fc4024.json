{"ast":null,"code":"// src/redux/slices/authSlice.ts\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoginVisible: true,\n  email: '',\n  password: '',\n  registerEmail: '',\n  registerPassword: '',\n  confirmPassword: '',\n  rememberMe: false,\n  acceptTerms: false,\n  focusedInput: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    toggleLoginVisibility(state) {\n      state.isLoginVisible = !state.isLoginVisible;\n    },\n    setInputValue(state, action) {\n      const {\n        field,\n        value\n      } = action.payload;\n      state[field] = value;\n    }\n  }\n});\nexport const {\n  toggleLoginVisibility,\n  setInputValue\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoginVisible","email","password","registerEmail","registerPassword","confirmPassword","rememberMe","acceptTerms","focusedInput","authSlice","name","reducers","toggleLoginVisibility","state","setInputValue","action","field","value","payload","actions","reducer"],"sources":["/Users/seungyeop_park/psy-jbnu.github.io/psy-jbnu.github.io/src/redux/slices/authSlice.ts"],"sourcesContent":["// src/redux/slices/authSlice.ts\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface AuthState {\n  isLoginVisible: boolean;\n  email: string;\n  password: string;\n  registerEmail: string;\n  registerPassword: string;\n  confirmPassword: string;\n  rememberMe: boolean;\n  acceptTerms: boolean;\n  focusedInput: string | null;\n}\n\nconst initialState: AuthState = {\n  isLoginVisible: true,\n  email: '',\n  password: '',\n  registerEmail: '',\n  registerPassword: '',\n  confirmPassword: '',\n  rememberMe: false,\n  acceptTerms: false,\n  focusedInput: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    toggleLoginVisibility(state) {\n      state.isLoginVisible = !state.isLoginVisible;\n    },\n    setInputValue(\n      state,\n      action: PayloadAction<{ field: keyof AuthState; value: string | boolean | null }>\n    ) {\n      const { field, value } = action.payload;\n      (state[field] as string | boolean | null) = value;\n    },\n  },\n});\n\nexport const { toggleLoginVisibility, setInputValue } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAuB,kBAAkB;AAc7D,MAAMC,YAAuB,GAAG;EAC9BC,cAAc,EAAE,IAAI;EACpBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE,EAAE;EACjBC,gBAAgB,EAAE,EAAE;EACpBC,eAAe,EAAE,EAAE;EACnBC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZX,YAAY;EACZY,QAAQ,EAAE;IACRC,qBAAqBA,CAACC,KAAK,EAAE;MAC3BA,KAAK,CAACb,cAAc,GAAG,CAACa,KAAK,CAACb,cAAc;IAC9C,CAAC;IACDc,aAAaA,CACXD,KAAK,EACLE,MAAiF,EACjF;MACA,MAAM;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAGF,MAAM,CAACG,OAAO;MACtCL,KAAK,CAACG,KAAK,CAAC,GAA+BC,KAAK;IACnD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,qBAAqB;EAAEE;AAAc,CAAC,GAAGL,SAAS,CAACU,OAAO;AACzE,eAAeV,SAAS,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}